meta:
  name:     (( param "Please name your pipeline" ))
  pipeline: (( grab meta.name ))
  target:   (( param "Please identify the name of the target Concourse CI" ))
  image:
    type: docker-image
    source:
      repository: starkandwayne/concourse

  github:
    uri:          (( concat "git@github.com:" meta.github.owner "/" meta.github.repo ))
    owner:        (( param "Please specify the name of the user / organization that owns the Github repository" ))
    repo:         (( param "Please specify the name of the Github repository" ))
    branch:       master
    private_key:  (( param "Please generate an SSH Deployment Key for this repo and specify it here" ))
    access_token: (( param "Please generate a Personal Access Token and specify it here (read-only for repos, to avoid rate limiting)" ))

jobs:
- name: go-buildpack
  serial: true
  plan:
  - { get: git }
  - { get: go-buildpack, trigger: true, params: {globs: ["*cflinuxfs3*.zip"]} }
  - task: update-script
    config:
      platform: linux
      image_resource: (( grab meta.image ))
      inputs:
      - name: git
      - name: go-buildpack
      outputs:
      - name: pushme
      run:
        path: bash
        args:
        - -ce
        - |
          version=$(cat go-buildpack/version)
          filename=$(basename $(ls go-buildpack/*.zip))
          git clone git pushme
          cd pushme
          cat > update-only.sh <<SHELL
          #!/bin/bash

          cf update-buildpack -s cflinuxfs3 --enable go_buildpack -p https://github.com/cloudfoundry/go-buildpack/releases/download/v${version}/${filename}
          SHELL
          if [[ "$(git status -s)X" != "X" ]]; then
            if [[ -z $(git config --global user.email) ]]; then
              git config --global user.email "drnic+bot@starkandwayne.com"
            fi
            if [[ -z $(git config --global user.name) ]]; then
              git config --global user.name "CI Bot"
            fi
            git add update-only.sh
            git commit -m "Updated go-buildpack to v${version}"
          fi
  - put: git
    params:
      rebase: true
      repository: pushme
resources:
- name: git
  type: git
  source:
    uri:         (( grab meta.github.uri ))
    branch:      (( grab meta.github.branch ))
    private_key: (( grab meta.github.private_key ))

- name: go-buildpack
  type: github-release
  check_every: 10m
  source:
    owner: cloudfoundry
    repository: go-buildpack
    access_token: (( grab meta.github.access_token ))