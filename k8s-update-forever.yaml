apiVersion: batch/v1
kind: Job
metadata:
  name: update-all-cf-buildpacks
spec:
  template:
    metadata:
      labels:
        app: update-all-cf-buildpacks
    spec:
      # TODO: always download new image
      restartPolicy: OnFailure
      serviceAccount: cf-operator
      initContainers:
      - name: wait-for-scf-router-service
        image: starkandwayne/update-all-cf-buildpacks
        command: ['./wait-for-scf-router-service.sh']
      - name: wait-for-scf-api-ready
        image: starkandwayne/update-all-cf-buildpacks
        command: ['./wait-for-cf-api-ready.sh']
        env:
        - name: CF_SYSTEM_DOMAIN
          valueFrom:
            secretKeyRef:
              name: scf.var-system-domain
              key: value
        - name: CF_API
          value: https://api.$(CF_SYSTEM_DOMAIN)
        - name: CF_SKIP_SSL_VALIDATION
          value: "true"
      containers:
      - name: update-buildpacks
        image: starkandwayne/update-all-cf-buildpacks
        env:
        - name: ROUTER_IP_ENVVAR
          value: SCF_ROUTER_0_SERVICE_HOST
        - name: CF_SYSTEM_DOMAIN
          valueFrom:
            secretKeyRef:
              name: scf.var-system-domain
              key: value
        - name: CF_API
          value: https://api.$(CF_SYSTEM_DOMAIN)
        - name: CF_SKIP_SSL_VALIDATION
          value: "true"
        - name: CF_USERNAME
          value: admin
        - name: CF_PASSWORD
          valueFrom:
            secretKeyRef:
              name: scf.var-cf-admin-password
              key: password
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: update-all-cf-buildpacks
spec:
  # At every 2nd minute https://crontab.guru/#*/2_*_*_*_*
  # schedule: "*/2 * * * *"
  # Daily at 1am        https://crontab.guru/#0_1_*_*_*
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccount: cf-operator
          initContainers:
          - name: wait-for-scf-router-service
            image: starkandwayne/update-all-cf-buildpacks
            command: ['./wait-for-scf-router-service.sh']
          - name: wait-for-scf-api-ready
            image: starkandwayne/update-all-cf-buildpacks
            command: ['./wait-for-cf-api-ready.sh']
            env:
            - name: ROUTER_IP_ENVVAR
              value: SCF_ROUTER_0_SERVICE_HOST
            - name: CF_SYSTEM_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: scf.var-system-domain
                  key: value
            - name: CF_API
              value: https://api.$(CF_SYSTEM_DOMAIN)
            - name: CF_SKIP_SSL_VALIDATION
              value: "true"
          containers:
          - name: update-buildpacks
            image: starkandwayne/update-all-cf-buildpacks
            env:
            - name: ROUTER_IP_ENVVAR
              value: SCF_ROUTER_0_SERVICE_HOST
            - name: CF_SYSTEM_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: scf.var-system-domain
                  key: value
            - name: CF_API
              value: https://api.$(CF_SYSTEM_DOMAIN)
            - name: CF_SKIP_SSL_VALIDATION
              value: "true"
            - name: CF_USERNAME
              value: admin
            - name: CF_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: scf.var-cf-admin-password
                  key: password
