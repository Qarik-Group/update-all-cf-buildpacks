---
# Source: update-all-cf-buildpacks/templates/immediate-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: update-all-cf-buildpacks
spec:
  template:
    metadata:
      labels:
        app: update-all-cf-buildpacks
    spec:
      restartPolicy: OnFailure
      serviceAccount: cf-operator
      initContainers:
      - name: wait-for-kubecf-router-service
        image: "starkandwayne/update-all-cf-buildpacks:latest"
        imagePullPolicy: "Always"
        command: ['./wait-for-kubecf-router-service.sh']
      - name: wait-for-kubecf-api-ready
        image: "starkandwayne/update-all-cf-buildpacks:latest"
        imagePullPolicy: "Always"
        command: ['./wait-for-cf-api-ready.sh']
        env:
        - name: ROUTER_IP_ENVVAR
          value: KUBECF_ROUTER_0_SERVICE_HOST
        - name: CF_SYSTEM_DOMAIN
          valueFrom:
            secretKeyRef:
              name: kubecf.var-system-domain
              key: value
        - name: CF_API
          value: https://api.$(CF_SYSTEM_DOMAIN)
        - name: CF_SKIP_SSL_VALIDATION
          value: "true"
        - name: CF_USERNAME
          value: admin
        - name: CF_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kubecf.var-cf-admin-password
              key: password
        - name: CF_HOME
          value: /cfhome
        volumeMounts:
        - mountPath: /cfhome
          name: cfhome
      containers:
      - name: update-buildpacks
        image: "starkandwayne/update-all-cf-buildpacks:latest"
        imagePullPolicy: "Always"
        env:
        - name: ROUTER_IP_ENVVAR
          value: KUBECF_ROUTER_0_SERVICE_HOST
        - name: CF_SYSTEM_DOMAIN
          valueFrom:
            secretKeyRef:
              name: kubecf.var-system-domain
              key: value
        - name: CF_HOME
          value: /cfhome
        volumeMounts:
        - mountPath: /cfhome
          name: cfhome
      volumes:
      - name: cfhome
        emptyDir: {}

---
# Source: update-all-cf-buildpacks/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: update-all-cf-buildpacks
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: update-all-cf-buildpacks
        spec:
          restartPolicy: OnFailure
          serviceAccount: cf-operator
          initContainers:
          - name: wait-for-kubecf-router-service
            image: "starkandwayne/update-all-cf-buildpacks:latest"
            imagePullPolicy: "Always"
            command: ['./wait-for-kubecf-router-service.sh']
          - name: wait-for-kubecf-api-ready
            image: "starkandwayne/update-all-cf-buildpacks:latest"
            imagePullPolicy: "Always"
            command: ['./wait-for-cf-api-ready.sh']
            env:
            - name: ROUTER_IP_ENVVAR
              value: KUBECF_ROUTER_0_SERVICE_HOST
            - name: CF_SYSTEM_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: kubecf.var-system-domain
                  key: value
            - name: CF_API
              value: https://api.$(CF_SYSTEM_DOMAIN)
            - name: CF_SKIP_SSL_VALIDATION
              value: "true"
            - name: CF_USERNAME
              value: admin
            - name: CF_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kubecf.var-cf-admin-password
                  key: password
            - name: CF_HOME
              value: /cfhome
            volumeMounts:
            - mountPath: /cfhome
              name: cfhome
          containers:
          - name: update-buildpacks
            image: "starkandwayne/update-all-cf-buildpacks:latest"
            imagePullPolicy: "Always"
            env:
            - name: ROUTER_IP_ENVVAR
              value: KUBECF_ROUTER_0_SERVICE_HOST
            - name: CF_SYSTEM_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: kubecf.var-system-domain
                  key: value
            - name: CF_API
              value: https://api.$(CF_SYSTEM_DOMAIN)
            - name: CF_SKIP_SSL_VALIDATION
              value: "true"
            - name: CF_HOME
              value: /cfhome
            volumeMounts:
            - mountPath: /cfhome
              name: cfhome
          volumes:
          - name: cfhome
            emptyDir: {}

